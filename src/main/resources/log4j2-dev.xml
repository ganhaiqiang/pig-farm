<?xml version="1.0" encoding="UTF-8"?>
<!--monitorInterval：Log4j2 自动检测修改配置文件和重新配置本身，设置间隔秒数 -->
<configuration monitorInterval="5">
	<!--日志级别以及优先级排序: OFF > FATAL > ERROR > WARN > INFO > DEBUG > TRACE > ALL -->
	<!--变量配置 -->
	<Properties>
		<!-- 格式化输出： %date表示日期，%thread表示线程名， %-5level：级别从左显示5个字符宽度 %msg：日志消息，%n是换行符 -->
		<!-- %logger{36} 表示 Logger 名字最长36个字符 -->
		<property name="LOG_PATTERN" value="%date{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n" />
	</Properties>

	<appenders>
		<console name="Console" target="SYSTEM_OUT">
			<!--输出日志的格式 -->
			<PatternLayout pattern="${LOG_PATTERN}" />
			<!--控制台只输出level及其以上级别的信息（onMatch），其他的直接拒绝（onMismatch） -->
			<ThresholdFilter level="debug" onMatch="ACCEPT" onMismatch="DENY" />
		</console>
	</appenders>

	<!--Logger节点用来单独指定日志的形式，比如要为指定包下的class指定不同的日志级别等。 -->
	<!--然后定义loggers，只有定义了logger并引入的appender，appender才会生效 -->
	<loggers>
		<!--过滤掉spring和mybatis的一些无用的DEBUG信息 -->
		<logger name="org.mybatis" level="info" additivity="false">
			<AppenderRef ref="Console" />
		</logger>
		<!--监控系统信息 -->
		<!--若是additivity设为false，则 子Logger 只会在自己的appender里输出，而不会在 父Logger 的appender里输出。 -->
		<Logger name="org.springframework" level="info" additivity="false">
			<AppenderRef ref="Console" />
		</Logger>
		<root level="debug">
			<appender-ref ref="Console" />
		</root>
	</loggers>
</configuration>